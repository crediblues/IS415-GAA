{
  "hash": "efceda5cb9b17a8ae1557e52e57a2054",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 2\"\nsubtitle: \"Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level\"\nauthor: \"Ooi Wen Xian\"\ndate: \"September 25, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n# 1.0 Overview\n\nDrug abuse is associated with significant negative health, financial and social consequences. Yet, illicit drug consumption remains highly prevalent and continues to be a growing problem worldwide. In 2021, 1 in 17 people aged 15–64 in the world had used a drug in the past 12 months. Notwithstanding population growth, the estimated number of drug users grew from 240 million in 2011 to 296 million in 2021.\n\nThe geopolitics of Thailand which is near the [Golden Triangle](https://en.wikipedia.org/wiki/Golden_Triangle_(Southeast_Asia)) of Indochina, the largest drug production site in Asia, and the constant transportation infrastructure development made Thailand became market and transit routes for drug trafficking to the third countries.\n\nIn Thailand, drug abuse is one of the major social issue. There are about 2.7 million youths using drugs in Thailand. Among youths aged between 15 and 19 years, there are about 300,000 who have needs for drug treatment. Most of Thai youths involved with drugs are vocational-school students, which nearly doubles in number compared to secondary-school students.\n\n## 1.1 Study Objectives\n\nWe are interested to discover:\n\n-   if the key indicators of drug abuse of Thailand are independent from space.\n\n-   If the indicators of drug abuse is indeed spatial dependent, if then, detect where are the clusters and outliers, and the hotspots.\n\n-   How the observations above evolve over time.\n\n# 2.0 Importing Packages\n\nWe need to import the following packages that are used for this study:\n\n-   [`sf`](https://rdrr.io/github/r-spatial/sf/man/sf-package.html) : to import, manage and process vector-based geospatial data in R.\n\n-   [`st`](https://rdrr.io/cran/sf/man/st.html) : creates simple features from numeric vectors, matrices, or lists, enabling the representation and manipulation of spatial structures in R.\n\n-   [`tidyverse`](https://www.tidyverse.org/) : a collection of R packages designed for data science, includes packages like `dplyr` for data manipulation, `ggplot2` for data visualization[`sfdep`](https://cran.r-project.org/web/packages/spdep/) : for computing spatial weights, global and local spatial autocorrelation statistics\n\n-   [`tmap`](https://cran.r-project.org/web/packages/tmap/) : for creating static and interactive thematic visualisations and maps.\n\n-   [`knitr`](https://cran.r-project.org/web/packages/spdep/) : to allow R code to be embedded in R Markdown documents.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf,st, tidyverse, tmap, knitr, sfdep, arrow)\n```\n:::\n\n\n# 3.0 Importing Data\n\nFor the purpose of this study, two data sets shall be used, they are:\n\n-   [Thailand Drug Offenses \\[2017-2022\\]](https://www.kaggle.com/datasets/thaweewatboy/thailand-drug-offenses-2017-2022) at Kaggle.\n\n-   [Thailand - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-tha?) at HDX. We would be using the province boundary data set.\n\n## 3.1 Importing Geospatial Data\n\nAs provinces are administrative level 1, we would be using the `tha_admbnda_adm1_rtsd_20220121` shapefile.\n\nIn this section, `st_read()` of **sf** package will be used to import `tha_admbnda_adm1_rtsd_20220121` dataset into R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai_province <- st_read(dsn = \"data/tha_adm_rtsd_itos_20210121_shp\", layer = \"tha_admbnda_adm1_rtsd_20220121\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\wamp64\\www\\crediblues\\IS415-GAA\\Take-Home_Ex\\Take-Home_Ex02\\data\\tha_adm_rtsd_itos_20210121_shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(thai_province)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n```\n\n\n:::\n:::\n\n\nWe shall convert to UTM Zone 47N (EPSG: 32647), which is often used for Thailand.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai_province <- st_transform(thai_province, crs = 32647)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(thai_province)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:32647 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 47N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 47N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",99,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.\"],\n        BBOX[0,96,84,102]],\n    ID[\"EPSG\",32647]]\n```\n\n\n:::\n:::\n\n\nLet's take a look at what is in `tha_province_admin_boundary`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai_province\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 325178.8 ymin: 620860.6 xmax: 1213656 ymax: 2263241\nProjected CRS: WGS 84 / UTM zone 47N\nFirst 10 features:\n   Shape_Leng Shape_Area                  ADM1_EN       ADM1_TH ADM1_PCODE\n1    2.417227 0.13133873                  Bangkok  กรุงเทพมหานคร       TH10\n2    1.695100 0.07926199             Samut Prakan    สมุทรปราการ       TH11\n3    1.251111 0.05323766               Nonthaburi         นนทบุรี       TH12\n4    1.884945 0.12698345             Pathum Thani        ปทุมธานี       TH13\n5    3.041716 0.21393797 Phra Nakhon Si Ayutthaya พระนครศรีอยุธยา       TH14\n6    1.739908 0.07920961                Ang Thong        อ่างทอง       TH15\n7    5.693342 0.54578838                 Lop Buri          ลพบุรี       TH16\n8    1.778326 0.06872655                Sing Buri         สิงห์บุรี       TH17\n9    2.896316 0.20907828                 Chai Nat         ชัยนาท       TH18\n10   4.766446 0.29208711                 Saraburi         สระบุรี       TH19\n   ADM1_REF ADM1ALT1EN ADM1ALT2EN ADM1ALT1TH ADM1ALT2TH  ADM0_EN   ADM0_TH\n1      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n2      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n3      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n4      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n5      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n6      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n7      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n8      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n9      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n10     <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n   ADM0_PCODE       date    validOn    validTo                       geometry\n1          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((674339.8 15...\n2          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((687139.8 15...\n3          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((644817.9 15...\n4          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((704086 1575...\n5          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((662941.6 16...\n6          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((643472.8 16...\n7          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((751293.3 17...\n8          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((647136.1 16...\n9          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((620165.4 17...\n10         TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((757935.1 16...\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(thai_province)+\n  tm_fill(col=\"white\")+\n  tm_borders(col = \"black\", lwd=0.3, alpha=0.6)+\n  tm_layout(\n    main.title = \"Provinces in Thailand\",\n    main.title.size = 1,\n    main.title.position = \"center\",\n    legend.show = FALSE,\n     frame = FALSE)\n```\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## 3.2 Importing Aspatial Data\n\nIn this section, `read_csv()` of **sf** package will be used to import the csv file into R environment. The output is R dataframe class.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntha_drug_offences <- read_csv(\"data/thai_drug_offenses_2017_2022.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 7392 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): types_of_drug_offenses, province_th, province_en\ndbl (2): fiscal_year, no_cases\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ntha_drug_offences\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7,392 × 5\n   fiscal_year types_of_drug_offenses no_cases province_th   province_en        \n         <dbl> <chr>                     <dbl> <chr>         <chr>              \n 1        2017 drug_use_cases            11871 กรุงเทพมหานคร  Bangkok            \n 2        2017 drug_use_cases              200 ชัยนาท         Chai Nat           \n 3        2017 drug_use_cases              553 นนทบุรี         Nonthaburi         \n 4        2017 drug_use_cases              450 ปทุมธานี        Pathum Thani       \n 5        2017 drug_use_cases              378 พระนครศรีอยุธยา Phra Nakhon Si Ayu…\n 6        2017 drug_use_cases              727 ลพบุรี          Loburi             \n 7        2017 drug_use_cases              820 สมุทรปราการ    Samut Prakan       \n 8        2017 drug_use_cases               69 สระบุรี         Saraburi           \n 9        2017 drug_use_cases              127 สิงห์บุรี         Sing Buri          \n10        2017 drug_use_cases              208 อ่างทอง        Ang Thong          \n# ℹ 7,382 more rows\n```\n\n\n:::\n:::\n\n\n# 4.0 Data Wrangling\n\n## 4.1 Correcting Province Name Mismatch\n\nLet's check if the names of the provinces in our geospatial and aspatial data match each other\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntha_drug_offences_provinces <- unique(tha_drug_offences$province_en)\nthai_province_provinces <- unique(thai_province$ADM1_EN)\n\n# Find provinces in drug data that don't match the spatial data\nmismatched_drug_provinces <- setdiff(tha_drug_offences_provinces, thai_province_provinces)\n\n# Find provinces in spatial data that don't match the drug data\nmismatched_spatial_provinces <- setdiff(thai_province_provinces, tha_drug_offences_provinces)\n\n# Mismatched province names\ncat(\"Provinces in drug data but not in spatial data:\\n\", mismatched_drug_provinces, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nProvinces in drug data but not in spatial data:\n Loburi buogkan \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Provinces in spatial data but not in drug data:\\n\", mismatched_spatial_provinces, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nProvinces in spatial data but not in drug data:\n Lop Buri Bueng Kan \n```\n\n\n:::\n:::\n\n\nThe provinces for Lop Buri and Bueng Kan are misspelled in `tha_drug_offences_provinces` .\n\nLet's rename them.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntha_drug_offences <- tha_drug_offences %>%\n  mutate(province_en = case_when(\n    province_en == \"Loburi\" ~ \"Lop Buri\",\n    province_en == \"buogkan\" ~ \"Bueng Kan\",\n    TRUE ~ province_en  # Keep other names unchanged\n  ))\n```\n:::\n\n\nChecking again for mismatch\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntha_drug_offences_provinces <- unique(tha_drug_offences$province_en)\nthai_province_provinces <- unique(thai_province$ADM1_EN)\n\n# Find provinces in drug data that don't match the spatial data\nmismatched_drug_provinces <- setdiff(tha_drug_offences_provinces, thai_province_provinces)\n\n# Find provinces in spatial data that don't match the drug data\nmismatched_spatial_provinces <- setdiff(thai_province_provinces, tha_drug_offences_provinces)\n\n# Mismatched province names\ncat(\"Provinces in drug data but not in spatial data:\\n\", mismatched_drug_provinces, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nProvinces in drug data but not in spatial data:\n  \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Provinces in spatial data but not in drug data:\\n\", mismatched_spatial_provinces, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nProvinces in spatial data but not in drug data:\n  \n```\n\n\n:::\n:::\n\n\n## 4.2 Drop redundant columns\n\nTo reduce the memory load, we can drop columns which are not relevant for this study and store only relevant columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntha_drug_offences <- subset(tha_drug_offences, select = c(fiscal_year, province_en, no_cases, types_of_drug_offenses))\n\ntha_drug_offences\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7,392 × 4\n   fiscal_year province_en              no_cases types_of_drug_offenses\n         <dbl> <chr>                       <dbl> <chr>                 \n 1        2017 Bangkok                     11871 drug_use_cases        \n 2        2017 Chai Nat                      200 drug_use_cases        \n 3        2017 Nonthaburi                    553 drug_use_cases        \n 4        2017 Pathum Thani                  450 drug_use_cases        \n 5        2017 Phra Nakhon Si Ayutthaya      378 drug_use_cases        \n 6        2017 Lop Buri                      727 drug_use_cases        \n 7        2017 Samut Prakan                  820 drug_use_cases        \n 8        2017 Saraburi                       69 drug_use_cases        \n 9        2017 Sing Buri                     127 drug_use_cases        \n10        2017 Ang Thong                     208 drug_use_cases        \n# ℹ 7,382 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nthai_province <- subset(thai_province, select = c(Shape_Leng, Shape_Area, ADM1_EN, geometry))\n\nthai_province \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 77 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 325178.8 ymin: 620860.6 xmax: 1213656 ymax: 2263241\nProjected CRS: WGS 84 / UTM zone 47N\nFirst 10 features:\n   Shape_Leng Shape_Area                  ADM1_EN\n1    2.417227 0.13133873                  Bangkok\n2    1.695100 0.07926199             Samut Prakan\n3    1.251111 0.05323766               Nonthaburi\n4    1.884945 0.12698345             Pathum Thani\n5    3.041716 0.21393797 Phra Nakhon Si Ayutthaya\n6    1.739908 0.07920961                Ang Thong\n7    5.693342 0.54578838                 Lop Buri\n8    1.778326 0.06872655                Sing Buri\n9    2.896316 0.20907828                 Chai Nat\n10   4.766446 0.29208711                 Saraburi\n                         geometry\n1  MULTIPOLYGON (((674339.8 15...\n2  MULTIPOLYGON (((687139.8 15...\n3  MULTIPOLYGON (((644817.9 15...\n4  MULTIPOLYGON (((704086 1575...\n5  MULTIPOLYGON (((662941.6 16...\n6  MULTIPOLYGON (((643472.8 16...\n7  MULTIPOLYGON (((751293.3 17...\n8  MULTIPOLYGON (((647136.1 16...\n9  MULTIPOLYGON (((620165.4 17...\n10 MULTIPOLYGON (((757935.1 16...\n```\n\n\n:::\n:::\n\n\n## 4.3 Relational Join\n\nSince `tha_drug_offences` only contains province names without any geometry, we will need to perform a **spatial join** to associate the drug data with the province boundaries.\n\nThe code chunk below will be used to join the attribute tables of `thai_province`’s SpatialPolygonsDataFrame with the attribute fields of `tha_drug_offences` dataframe. This is performed by using [`left_join()`](https://dplyr.tidyverse.org/reference/mutate-joins.html) of **dplyr** package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai_province <- thai_province %>%\n  left_join(tha_drug_offences , by = c(\"ADM1_EN\" = \"province_en\"))\nthai_province\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 7392 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 325178.8 ymin: 620860.6 xmax: 1213656 ymax: 2263241\nProjected CRS: WGS 84 / UTM zone 47N\nFirst 10 features:\n   Shape_Leng Shape_Area ADM1_EN fiscal_year no_cases\n1    2.417227  0.1313387 Bangkok        2017    11871\n2    2.417227  0.1313387 Bangkok        2018    16480\n3    2.417227  0.1313387 Bangkok        2019    15067\n4    2.417227  0.1313387 Bangkok        2020     9724\n5    2.417227  0.1313387 Bangkok        2021     9625\n6    2.417227  0.1313387 Bangkok        2022     2755\n7    2.417227  0.1313387 Bangkok        2017    12371\n8    2.417227  0.1313387 Bangkok        2018    17131\n9    2.417227  0.1313387 Bangkok        2019    15458\n10   2.417227  0.1313387 Bangkok        2020     9754\n       types_of_drug_offenses                       geometry\n1              drug_use_cases MULTIPOLYGON (((674339.8 15...\n2              drug_use_cases MULTIPOLYGON (((674339.8 15...\n3              drug_use_cases MULTIPOLYGON (((674339.8 15...\n4              drug_use_cases MULTIPOLYGON (((674339.8 15...\n5              drug_use_cases MULTIPOLYGON (((674339.8 15...\n6              drug_use_cases MULTIPOLYGON (((674339.8 15...\n7  suspects_in_drug_use_cases MULTIPOLYGON (((674339.8 15...\n8  suspects_in_drug_use_cases MULTIPOLYGON (((674339.8 15...\n9  suspects_in_drug_use_cases MULTIPOLYGON (((674339.8 15...\n10 suspects_in_drug_use_cases MULTIPOLYGON (((674339.8 15...\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_offense_summary <- thai_province %>%\n  group_by(ADM1_EN, types_of_drug_offenses) %>%\n  summarise(total_cases = sum(no_cases, na.rm = TRUE), .groups = 'drop')\ndrug_offense_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 1232 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 325178.8 ymin: 620860.6 xmax: 1213656 ymax: 2263241\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 1,232 × 4\n   ADM1_EN       types_of_drug_offenses    total_cases                  geometry\n   <chr>         <chr>                           <dbl>        <MULTIPOLYGON [m]>\n 1 Amnat Charoen conspiracy_cases                    5 (((1137720 1809629, 1137…\n 2 Amnat Charoen drug_use_cases                  11695 (((1137720 1809629, 1137…\n 3 Amnat Charoen export_cases                        0 (((1137720 1809629, 1137…\n 4 Amnat Charoen import_cases                        9 (((1137720 1809629, 1137…\n 5 Amnat Charoen possession_cases                 2127 (((1137720 1809629, 1137…\n 6 Amnat Charoen possession_with_intent_t…        2298 (((1137720 1809629, 1137…\n 7 Amnat Charoen production_cases                  280 (((1137720 1809629, 1137…\n 8 Amnat Charoen suspects_in_conspiracy_c…          13 (((1137720 1809629, 1137…\n 9 Amnat Charoen suspects_in_drug_use_cas…       11829 (((1137720 1809629, 1137…\n10 Amnat Charoen suspects_in_export_cases            0 (((1137720 1809629, 1137…\n# ℹ 1,222 more rows\n```\n\n\n:::\n:::\n\n\nSince we are concerned about drug use cases, let's filter our data for specific indicators only. We would be using these 5 indicators for our analysis.\n\n-   drug_use_cases\n\n-   possession_cases\n\n-   possession_with_intent_to_distribute_cases\n\n-   production_cases\n\n-   trafficking_cases\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_abuse_indicators_summary <- thai_province %>%\n  filter(types_of_drug_offenses %in% c(\"drug_use_cases\", \n                                       \"possession_cases\", \n                                       \"possession_with_intent_to_distribute_cases\", \n                                       \"production_cases\",\n                                       \"trafficking_cases\")) %>%\n  group_by(ADM1_EN, fiscal_year, types_of_drug_offenses) %>%\n  summarise(total_cases = sum(no_cases, na.rm = TRUE), .groups = 'drop')\n\n# View the drug abuse indicators layer\ndrug_abuse_indicators_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 2310 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 325178.8 ymin: 620860.6 xmax: 1213656 ymax: 2263241\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 2,310 × 5\n   ADM1_EN       fiscal_year types_of_drug_offenses                  total_cases\n   <chr>               <dbl> <chr>                                         <dbl>\n 1 Amnat Charoen        2017 drug_use_cases                                 1734\n 2 Amnat Charoen        2017 possession_cases                                293\n 3 Amnat Charoen        2017 possession_with_intent_to_distribute_c…         241\n 4 Amnat Charoen        2017 production_cases                                 14\n 5 Amnat Charoen        2017 trafficking_cases                               211\n 6 Amnat Charoen        2018 drug_use_cases                                 2038\n 7 Amnat Charoen        2018 possession_cases                                307\n 8 Amnat Charoen        2018 possession_with_intent_to_distribute_c…         269\n 9 Amnat Charoen        2018 production_cases                                 11\n10 Amnat Charoen        2018 trafficking_cases                               143\n# ℹ 2,300 more rows\n# ℹ 1 more variable: geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nyears <- unique(drug_abuse_indicators_summary$fiscal_year)\n\n# Loop through each year to create and save individual plots\nfor (year in years) {\n  year_data <- drug_abuse_indicators_summary %>%\n    filter(fiscal_year == year)\n  \n  p <- ggplot(year_data, aes(x = ADM1_EN, y = total_cases, fill = types_of_drug_offenses)) +\n    geom_col(position = position_dodge(width = 0.9), width = 0.7) +  # Create bars for total cases\n    labs(title = paste(\"Distribution of Drug Abuse Indicators in\", year),\n         x = \"Province\",\n         y = \"Total Cases\",\n         fill = \"Type of Drug Offense\") +\n    theme_minimal() +  # Use a minimal theme\n    theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 4),\n          legend.position = \"right\",\n          legend.text = element_text(size = 4)) +\n    scale_fill_brewer(palette = \"Set3\")\n  print(p)\n}\n```\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-17-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-17-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-17-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-17-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-17-6.png){width=672}\n:::\n:::\n\n\n## 4.4 Visualising Type of Drug offences\n\nLet's visualise the distribution of total drug cases from our indicators by using qtm() of tmap package, via equal and quantile classification styles.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_offense_summary_all_cases <- thai_province %>%\n  group_by(ADM1_EN, fiscal_year) %>%\n  summarise(total_cases = sum(no_cases, na.rm = TRUE),\n            geometry = first(geometry), .groups = 'drop')\n\nprint(drug_offense_summary_all_cases)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 462 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 325178.8 ymin: 620860.6 xmax: 1213656 ymax: 2263241\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 462 × 4\n   ADM1_EN       fiscal_year total_cases                                geometry\n   <chr>               <dbl>       <dbl>                      <MULTIPOLYGON [m]>\n 1 Amnat Charoen        2017        5076 (((1137720 1809629, 1137724 1809622, 1…\n 2 Amnat Charoen        2018        5651 (((1137720 1809629, 1137724 1809622, 1…\n 3 Amnat Charoen        2019        7339 (((1137720 1809629, 1137724 1809622, 1…\n 4 Amnat Charoen        2020        3949 (((1137720 1809629, 1137724 1809622, 1…\n 5 Amnat Charoen        2021        8961 (((1137720 1809629, 1137724 1809622, 1…\n 6 Amnat Charoen        2022        4459 (((1137720 1809629, 1137724 1809622, 1…\n 7 Ang Thong            2017        1614 (((643472.8 1636469, 643496 1636423, 6…\n 8 Ang Thong            2018        2717 (((643472.8 1636469, 643496 1636423, 6…\n 9 Ang Thong            2019        2781 (((643472.8 1636469, 643496 1636423, 6…\n10 Ang Thong            2020        2636 (((643472.8 1636469, 643496 1636423, 6…\n# ℹ 452 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\nyears <- unique(drug_offense_summary_all_cases$fiscal_year)\n\nfor (year in years) {\n  year_data <- drug_offense_summary_all_cases[drug_offense_summary_all_cases$fiscal_year == year, ]\n  \n  # Create a map with equal interval classification\n  equal <- tm_shape(year_data) +\n    tm_fill(\"total_cases\",\n            n = 5,\n            style = \"equal\",\n            title = \"Total Drug Use Cases\") +\n    tm_borders(alpha = 0.5) +\n    tm_layout(main.title = paste(\"Equal Interval -\", year), title.size = 0.5)\n  \n  # Create a map with quantile classification\n  quantile <- tm_shape(year_data) +\n    tm_fill(\"total_cases\",\n            n = 5,\n            style = \"quantile\",\n            title = \"Total Drug Use Cases\") +\n    tm_borders(alpha = 0.5) +\n    tm_layout(main.title = paste(\"Quantile -\", year), title.size = 0.5)\n  \n  tmap_arranged <- tmap_arrange(equal, quantile, asp = 1, ncol = 2)\n  \n  print(tmap_arranged)\n}\n```\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-19-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-19-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-19-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-19-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-19-6.png){width=672}\n:::\n:::\n\n\n# 5.0 Global Measures of Spatial Autocorrelation\nIn this section, we would be computing global spatial autocorrelation statistics and to perform spatial complete randomness test for global spatial autocorrelation.\n\n## 5.1 Computing Contiguity Spatial Weights\n\nBefore we can compute the global spatial autocorrelation statistics, we need to construct a spatial weights of the study area. The spatial weights is used to define the neighbourhood relationships between the geographical units (i.e. province) in the study area.\n\nIn the code chunk below, st_neighbors() from sfdep package is used to compute contiguity weight matrices for the study area. This function builds a neighbours list based on regions with contiguous boundaries.  \n\nThe code chunk below is used to compute Queen contiguity weight matrix.\n\n::: {.cell}\n\n```{.r .cell-code}\nyearly_nb_data <- list()\n\n# Loop through each fiscal year\nfor (year in unique(drug_offense_summary_all_cases$fiscal_year)) {\n  \n  yearly_data <- drug_offense_summary_all_cases %>% filter(fiscal_year == year)\n  \n  wm_sf <- st_contiguity(yearly_data, queen=TRUE) \n\n  yearly_nb_data[[as.character(year)]] <- wm_sf\n  \n  print(paste(\"Summary for year\", year))\n  print(summary(wm_sf))\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in spdep::poly2nb(geometry, queen = queen, ...): some observations have no neighbours;\nif this seems unexpected, try increasing the snap argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in spdep::poly2nb(geometry, queen = queen, ...): neighbour object has 2 sub-graphs;\nif this sub-graph count seems unexpected, try increasing the snap argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Summary for year 2017\"\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n48\n2 disjoint connected subgraphs\nLink number distribution:\n\n 0  1  2  3  4  5  6  7  8  9 \n 1  1  5 17 15 17 10  5  4  2 \n1 least connected region:\n71 with 1 link\n2 most connected regions:\n17 69 with 9 links\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in spdep::poly2nb(geometry, queen = queen, ...): some observations have no neighbours;\nif this seems unexpected, try increasing the snap argument.\nWarning in spdep::poly2nb(geometry, queen = queen, ...): neighbour object has 2 sub-graphs;\nif this sub-graph count seems unexpected, try increasing the snap argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Summary for year 2018\"\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n48\n2 disjoint connected subgraphs\nLink number distribution:\n\n 0  1  2  3  4  5  6  7  8  9 \n 1  1  5 17 15 17 10  5  4  2 \n1 least connected region:\n71 with 1 link\n2 most connected regions:\n17 69 with 9 links\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in spdep::poly2nb(geometry, queen = queen, ...): some observations have no neighbours;\nif this seems unexpected, try increasing the snap argument.\nWarning in spdep::poly2nb(geometry, queen = queen, ...): neighbour object has 2 sub-graphs;\nif this sub-graph count seems unexpected, try increasing the snap argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Summary for year 2019\"\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n48\n2 disjoint connected subgraphs\nLink number distribution:\n\n 0  1  2  3  4  5  6  7  8  9 \n 1  1  5 17 15 17 10  5  4  2 \n1 least connected region:\n71 with 1 link\n2 most connected regions:\n17 69 with 9 links\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in spdep::poly2nb(geometry, queen = queen, ...): some observations have no neighbours;\nif this seems unexpected, try increasing the snap argument.\nWarning in spdep::poly2nb(geometry, queen = queen, ...): neighbour object has 2 sub-graphs;\nif this sub-graph count seems unexpected, try increasing the snap argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Summary for year 2020\"\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n48\n2 disjoint connected subgraphs\nLink number distribution:\n\n 0  1  2  3  4  5  6  7  8  9 \n 1  1  5 17 15 17 10  5  4  2 \n1 least connected region:\n71 with 1 link\n2 most connected regions:\n17 69 with 9 links\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in spdep::poly2nb(geometry, queen = queen, ...): some observations have no neighbours;\nif this seems unexpected, try increasing the snap argument.\nWarning in spdep::poly2nb(geometry, queen = queen, ...): neighbour object has 2 sub-graphs;\nif this sub-graph count seems unexpected, try increasing the snap argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Summary for year 2021\"\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n48\n2 disjoint connected subgraphs\nLink number distribution:\n\n 0  1  2  3  4  5  6  7  8  9 \n 1  1  5 17 15 17 10  5  4  2 \n1 least connected region:\n71 with 1 link\n2 most connected regions:\n17 69 with 9 links\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in spdep::poly2nb(geometry, queen = queen, ...): some observations have no neighbours;\nif this seems unexpected, try increasing the snap argument.\nWarning in spdep::poly2nb(geometry, queen = queen, ...): neighbour object has 2 sub-graphs;\nif this sub-graph count seems unexpected, try increasing the snap argument.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Summary for year 2022\"\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 5.93692 \nAverage number of links: 4.571429 \n1 region with no links:\n48\n2 disjoint connected subgraphs\nLink number distribution:\n\n 0  1  2  3  4  5  6  7  8  9 \n 1  1  5 17 15 17 10  5  4  2 \n1 least connected region:\n71 with 1 link\n2 most connected regions:\n17 69 with 9 links\n```\n\n\n:::\n:::\n\n\nPhuket is the disconnected province, which makes sense geographically, as Phuket is an island province in Thailand, which could lead to its being classified as a separate component in spatial neighbor analysis and it being isolated when using the st_contiguity() function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (year in unique(drug_offense_summary_all_cases$fiscal_year)) {\n  \n  yearly_data <- drug_offense_summary_all_cases %>%\n    filter(fiscal_year == year, ADM1_EN != \"Phuket\")\n  \n  wm_sf <- st_contiguity(yearly_data, queen = TRUE) \n  \n  yearly_nb_data[[as.character(year)]] <- wm_sf\n  \n  print(paste(\"Summary for year\", year))\n  print(summary(wm_sf))\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Summary for year 2017\"\nNeighbour list object:\nNumber of regions: 76 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 6.094183 \nAverage number of links: 4.631579 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 \n 1  5 17 15 17 10  5  4  2 \n1 least connected region:\n70 with 1 link\n2 most connected regions:\n17 68 with 9 links\n[1] \"Summary for year 2018\"\nNeighbour list object:\nNumber of regions: 76 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 6.094183 \nAverage number of links: 4.631579 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 \n 1  5 17 15 17 10  5  4  2 \n1 least connected region:\n70 with 1 link\n2 most connected regions:\n17 68 with 9 links\n[1] \"Summary for year 2019\"\nNeighbour list object:\nNumber of regions: 76 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 6.094183 \nAverage number of links: 4.631579 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 \n 1  5 17 15 17 10  5  4  2 \n1 least connected region:\n70 with 1 link\n2 most connected regions:\n17 68 with 9 links\n[1] \"Summary for year 2020\"\nNeighbour list object:\nNumber of regions: 76 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 6.094183 \nAverage number of links: 4.631579 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 \n 1  5 17 15 17 10  5  4  2 \n1 least connected region:\n70 with 1 link\n2 most connected regions:\n17 68 with 9 links\n[1] \"Summary for year 2021\"\nNeighbour list object:\nNumber of regions: 76 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 6.094183 \nAverage number of links: 4.631579 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 \n 1  5 17 15 17 10  5  4  2 \n1 least connected region:\n70 with 1 link\n2 most connected regions:\n17 68 with 9 links\n[1] \"Summary for year 2022\"\nNeighbour list object:\nNumber of regions: 76 \nNumber of nonzero links: 352 \nPercentage nonzero weights: 6.094183 \nAverage number of links: 4.631579 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 \n 1  5 17 15 17 10  5  4  2 \n1 least connected region:\n70 with 1 link\n2 most connected regions:\n17 68 with 9 links\n```\n\n\n:::\n:::\n\nNow, let's calculate the Weights.\n\n::: {.cell}\n\n```{.r .cell-code}\nyearly_listw_data <- list()\n\nfor (year in names(yearly_nb_data)) {\n  \n  wm_q <- yearly_nb_data[[year]]\n\n  yearly_data <- drug_offense_summary_all_cases %>%\n    filter(fiscal_year == year, ADM1_EN != \"Phuket\")\n  \n  rswm_q <- st_weights(wm_q, style=\"W\")\n  \n  yearly_listw_data[[year]] <- rswm_q\n  \n  print(paste(\"Weight object for year\", year))\n  print(rswm_q)\n\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Weight object for year 2017\"\n[[1]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[2]]\n[1] 0.25 0.25 0.25 0.25\n\n[[3]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[4]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[5]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[6]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[7]]\n[1] 0.25 0.25 0.25 0.25\n\n[[8]]\n[1] 0.25 0.25 0.25 0.25\n\n[[9]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[10]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[11]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[12]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[13]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[14]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[15]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[16]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[17]]\n[1] 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111\n[8] 0.1111111 0.1111111\n\n[[18]]\n[1] 0.25 0.25 0.25 0.25\n\n[[19]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[20]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[21]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[22]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[23]]\n[1] 0.5 0.5\n\n[[24]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[25]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[26]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[27]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[28]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[29]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[30]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[31]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[32]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[33]]\n[1] 0.5 0.5\n\n[[34]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[35]]\n[1] 0.25 0.25 0.25 0.25\n\n[[36]]\n[1] 0.25 0.25 0.25 0.25\n\n[[37]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[38]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[39]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[40]]\n[1] 0.25 0.25 0.25 0.25\n\n[[41]]\n[1] 0.25 0.25 0.25 0.25\n\n[[42]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[43]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[44]]\n[1] 0.25 0.25 0.25 0.25\n\n[[45]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[46]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[47]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[48]]\n[1] 0.25 0.25 0.25 0.25\n\n[[49]]\n[1] 0.5 0.5\n\n[[50]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[51]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[52]]\n[1] 0.5 0.5\n\n[[53]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[54]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[55]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[56]]\n[1] 0.5 0.5\n\n[[57]]\n[1] 0.25 0.25 0.25 0.25\n\n[[58]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[59]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[60]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[61]]\n[1] 0.25 0.25 0.25 0.25\n\n[[62]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[63]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[64]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[65]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[66]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[67]]\n[1] 0.25 0.25 0.25 0.25\n\n[[68]]\n[1] 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111\n[8] 0.1111111 0.1111111\n\n[[69]]\n[1] 0.25 0.25 0.25 0.25\n\n[[70]]\n[1] 1\n\n[[71]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[72]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[73]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[74]]\n[1] 0.25 0.25 0.25 0.25\n\n[[75]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[76]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\nattr(,\"mode\")\n[1] \"binary\"\nattr(,\"W\")\n[1] TRUE\nattr(,\"comp\")\nattr(,\"comp\")$d\n [1] 3 4 6 3 5 8 4 4 5 5 3 3 3 6 5 5 9 4 7 3 6 8 2 5 6 5 7 3 8 8 5 3 2 3 4 4 6 3\n[39] 3 4 4 7 3 4 6 7 5 4 2 3 5 2 6 5 6 2 4 3 5 3 4 5 5 6 7 5 4 9 4 1 3 6 5 4 3 5\n\n[1] \"Weight object for year 2018\"\n[[1]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[2]]\n[1] 0.25 0.25 0.25 0.25\n\n[[3]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[4]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[5]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[6]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[7]]\n[1] 0.25 0.25 0.25 0.25\n\n[[8]]\n[1] 0.25 0.25 0.25 0.25\n\n[[9]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[10]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[11]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[12]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[13]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[14]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[15]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[16]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[17]]\n[1] 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111\n[8] 0.1111111 0.1111111\n\n[[18]]\n[1] 0.25 0.25 0.25 0.25\n\n[[19]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[20]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[21]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[22]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[23]]\n[1] 0.5 0.5\n\n[[24]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[25]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[26]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[27]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[28]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[29]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[30]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[31]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[32]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[33]]\n[1] 0.5 0.5\n\n[[34]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[35]]\n[1] 0.25 0.25 0.25 0.25\n\n[[36]]\n[1] 0.25 0.25 0.25 0.25\n\n[[37]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[38]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[39]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[40]]\n[1] 0.25 0.25 0.25 0.25\n\n[[41]]\n[1] 0.25 0.25 0.25 0.25\n\n[[42]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[43]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[44]]\n[1] 0.25 0.25 0.25 0.25\n\n[[45]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[46]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[47]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[48]]\n[1] 0.25 0.25 0.25 0.25\n\n[[49]]\n[1] 0.5 0.5\n\n[[50]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[51]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[52]]\n[1] 0.5 0.5\n\n[[53]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[54]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[55]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[56]]\n[1] 0.5 0.5\n\n[[57]]\n[1] 0.25 0.25 0.25 0.25\n\n[[58]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[59]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[60]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[61]]\n[1] 0.25 0.25 0.25 0.25\n\n[[62]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[63]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[64]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[65]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[66]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[67]]\n[1] 0.25 0.25 0.25 0.25\n\n[[68]]\n[1] 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111\n[8] 0.1111111 0.1111111\n\n[[69]]\n[1] 0.25 0.25 0.25 0.25\n\n[[70]]\n[1] 1\n\n[[71]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[72]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[73]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[74]]\n[1] 0.25 0.25 0.25 0.25\n\n[[75]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[76]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\nattr(,\"mode\")\n[1] \"binary\"\nattr(,\"W\")\n[1] TRUE\nattr(,\"comp\")\nattr(,\"comp\")$d\n [1] 3 4 6 3 5 8 4 4 5 5 3 3 3 6 5 5 9 4 7 3 6 8 2 5 6 5 7 3 8 8 5 3 2 3 4 4 6 3\n[39] 3 4 4 7 3 4 6 7 5 4 2 3 5 2 6 5 6 2 4 3 5 3 4 5 5 6 7 5 4 9 4 1 3 6 5 4 3 5\n\n[1] \"Weight object for year 2019\"\n[[1]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[2]]\n[1] 0.25 0.25 0.25 0.25\n\n[[3]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[4]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[5]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[6]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[7]]\n[1] 0.25 0.25 0.25 0.25\n\n[[8]]\n[1] 0.25 0.25 0.25 0.25\n\n[[9]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[10]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[11]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[12]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[13]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[14]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[15]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[16]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[17]]\n[1] 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111\n[8] 0.1111111 0.1111111\n\n[[18]]\n[1] 0.25 0.25 0.25 0.25\n\n[[19]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[20]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[21]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[22]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[23]]\n[1] 0.5 0.5\n\n[[24]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[25]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[26]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[27]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[28]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[29]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[30]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[31]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[32]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[33]]\n[1] 0.5 0.5\n\n[[34]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[35]]\n[1] 0.25 0.25 0.25 0.25\n\n[[36]]\n[1] 0.25 0.25 0.25 0.25\n\n[[37]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[38]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[39]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[40]]\n[1] 0.25 0.25 0.25 0.25\n\n[[41]]\n[1] 0.25 0.25 0.25 0.25\n\n[[42]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[43]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[44]]\n[1] 0.25 0.25 0.25 0.25\n\n[[45]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[46]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[47]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[48]]\n[1] 0.25 0.25 0.25 0.25\n\n[[49]]\n[1] 0.5 0.5\n\n[[50]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[51]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[52]]\n[1] 0.5 0.5\n\n[[53]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[54]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[55]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[56]]\n[1] 0.5 0.5\n\n[[57]]\n[1] 0.25 0.25 0.25 0.25\n\n[[58]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[59]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[60]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[61]]\n[1] 0.25 0.25 0.25 0.25\n\n[[62]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[63]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[64]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[65]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[66]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[67]]\n[1] 0.25 0.25 0.25 0.25\n\n[[68]]\n[1] 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111\n[8] 0.1111111 0.1111111\n\n[[69]]\n[1] 0.25 0.25 0.25 0.25\n\n[[70]]\n[1] 1\n\n[[71]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[72]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[73]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[74]]\n[1] 0.25 0.25 0.25 0.25\n\n[[75]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[76]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\nattr(,\"mode\")\n[1] \"binary\"\nattr(,\"W\")\n[1] TRUE\nattr(,\"comp\")\nattr(,\"comp\")$d\n [1] 3 4 6 3 5 8 4 4 5 5 3 3 3 6 5 5 9 4 7 3 6 8 2 5 6 5 7 3 8 8 5 3 2 3 4 4 6 3\n[39] 3 4 4 7 3 4 6 7 5 4 2 3 5 2 6 5 6 2 4 3 5 3 4 5 5 6 7 5 4 9 4 1 3 6 5 4 3 5\n\n[1] \"Weight object for year 2020\"\n[[1]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[2]]\n[1] 0.25 0.25 0.25 0.25\n\n[[3]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[4]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[5]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[6]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[7]]\n[1] 0.25 0.25 0.25 0.25\n\n[[8]]\n[1] 0.25 0.25 0.25 0.25\n\n[[9]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[10]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[11]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[12]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[13]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[14]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[15]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[16]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[17]]\n[1] 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111\n[8] 0.1111111 0.1111111\n\n[[18]]\n[1] 0.25 0.25 0.25 0.25\n\n[[19]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[20]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[21]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[22]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[23]]\n[1] 0.5 0.5\n\n[[24]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[25]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[26]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[27]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[28]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[29]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[30]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[31]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[32]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[33]]\n[1] 0.5 0.5\n\n[[34]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[35]]\n[1] 0.25 0.25 0.25 0.25\n\n[[36]]\n[1] 0.25 0.25 0.25 0.25\n\n[[37]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[38]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[39]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[40]]\n[1] 0.25 0.25 0.25 0.25\n\n[[41]]\n[1] 0.25 0.25 0.25 0.25\n\n[[42]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[43]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[44]]\n[1] 0.25 0.25 0.25 0.25\n\n[[45]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[46]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[47]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[48]]\n[1] 0.25 0.25 0.25 0.25\n\n[[49]]\n[1] 0.5 0.5\n\n[[50]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[51]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[52]]\n[1] 0.5 0.5\n\n[[53]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[54]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[55]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[56]]\n[1] 0.5 0.5\n\n[[57]]\n[1] 0.25 0.25 0.25 0.25\n\n[[58]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[59]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[60]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[61]]\n[1] 0.25 0.25 0.25 0.25\n\n[[62]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[63]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[64]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[65]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[66]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[67]]\n[1] 0.25 0.25 0.25 0.25\n\n[[68]]\n[1] 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111\n[8] 0.1111111 0.1111111\n\n[[69]]\n[1] 0.25 0.25 0.25 0.25\n\n[[70]]\n[1] 1\n\n[[71]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[72]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[73]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[74]]\n[1] 0.25 0.25 0.25 0.25\n\n[[75]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[76]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\nattr(,\"mode\")\n[1] \"binary\"\nattr(,\"W\")\n[1] TRUE\nattr(,\"comp\")\nattr(,\"comp\")$d\n [1] 3 4 6 3 5 8 4 4 5 5 3 3 3 6 5 5 9 4 7 3 6 8 2 5 6 5 7 3 8 8 5 3 2 3 4 4 6 3\n[39] 3 4 4 7 3 4 6 7 5 4 2 3 5 2 6 5 6 2 4 3 5 3 4 5 5 6 7 5 4 9 4 1 3 6 5 4 3 5\n\n[1] \"Weight object for year 2021\"\n[[1]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[2]]\n[1] 0.25 0.25 0.25 0.25\n\n[[3]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[4]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[5]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[6]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[7]]\n[1] 0.25 0.25 0.25 0.25\n\n[[8]]\n[1] 0.25 0.25 0.25 0.25\n\n[[9]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[10]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[11]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[12]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[13]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[14]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[15]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[16]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[17]]\n[1] 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111\n[8] 0.1111111 0.1111111\n\n[[18]]\n[1] 0.25 0.25 0.25 0.25\n\n[[19]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[20]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[21]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[22]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[23]]\n[1] 0.5 0.5\n\n[[24]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[25]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[26]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[27]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[28]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[29]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[30]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[31]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[32]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[33]]\n[1] 0.5 0.5\n\n[[34]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[35]]\n[1] 0.25 0.25 0.25 0.25\n\n[[36]]\n[1] 0.25 0.25 0.25 0.25\n\n[[37]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[38]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[39]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[40]]\n[1] 0.25 0.25 0.25 0.25\n\n[[41]]\n[1] 0.25 0.25 0.25 0.25\n\n[[42]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[43]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[44]]\n[1] 0.25 0.25 0.25 0.25\n\n[[45]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[46]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[47]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[48]]\n[1] 0.25 0.25 0.25 0.25\n\n[[49]]\n[1] 0.5 0.5\n\n[[50]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[51]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[52]]\n[1] 0.5 0.5\n\n[[53]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[54]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[55]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[56]]\n[1] 0.5 0.5\n\n[[57]]\n[1] 0.25 0.25 0.25 0.25\n\n[[58]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[59]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[60]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[61]]\n[1] 0.25 0.25 0.25 0.25\n\n[[62]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[63]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[64]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[65]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[66]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[67]]\n[1] 0.25 0.25 0.25 0.25\n\n[[68]]\n[1] 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111\n[8] 0.1111111 0.1111111\n\n[[69]]\n[1] 0.25 0.25 0.25 0.25\n\n[[70]]\n[1] 1\n\n[[71]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[72]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[73]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[74]]\n[1] 0.25 0.25 0.25 0.25\n\n[[75]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[76]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\nattr(,\"mode\")\n[1] \"binary\"\nattr(,\"W\")\n[1] TRUE\nattr(,\"comp\")\nattr(,\"comp\")$d\n [1] 3 4 6 3 5 8 4 4 5 5 3 3 3 6 5 5 9 4 7 3 6 8 2 5 6 5 7 3 8 8 5 3 2 3 4 4 6 3\n[39] 3 4 4 7 3 4 6 7 5 4 2 3 5 2 6 5 6 2 4 3 5 3 4 5 5 6 7 5 4 9 4 1 3 6 5 4 3 5\n\n[1] \"Weight object for year 2022\"\n[[1]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[2]]\n[1] 0.25 0.25 0.25 0.25\n\n[[3]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[4]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[5]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[6]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[7]]\n[1] 0.25 0.25 0.25 0.25\n\n[[8]]\n[1] 0.25 0.25 0.25 0.25\n\n[[9]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[10]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[11]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[12]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[13]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[14]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[15]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[16]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[17]]\n[1] 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111\n[8] 0.1111111 0.1111111\n\n[[18]]\n[1] 0.25 0.25 0.25 0.25\n\n[[19]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[20]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[21]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[22]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[23]]\n[1] 0.5 0.5\n\n[[24]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[25]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[26]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[27]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[28]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[29]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[30]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n[[31]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[32]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[33]]\n[1] 0.5 0.5\n\n[[34]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[35]]\n[1] 0.25 0.25 0.25 0.25\n\n[[36]]\n[1] 0.25 0.25 0.25 0.25\n\n[[37]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[38]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[39]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[40]]\n[1] 0.25 0.25 0.25 0.25\n\n[[41]]\n[1] 0.25 0.25 0.25 0.25\n\n[[42]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[43]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[44]]\n[1] 0.25 0.25 0.25 0.25\n\n[[45]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[46]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[47]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[48]]\n[1] 0.25 0.25 0.25 0.25\n\n[[49]]\n[1] 0.5 0.5\n\n[[50]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[51]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[52]]\n[1] 0.5 0.5\n\n[[53]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[54]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[55]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[56]]\n[1] 0.5 0.5\n\n[[57]]\n[1] 0.25 0.25 0.25 0.25\n\n[[58]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[59]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[60]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[61]]\n[1] 0.25 0.25 0.25 0.25\n\n[[62]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[63]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[64]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[65]]\n[1] 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571 0.1428571\n\n[[66]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[67]]\n[1] 0.25 0.25 0.25 0.25\n\n[[68]]\n[1] 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111\n[8] 0.1111111 0.1111111\n\n[[69]]\n[1] 0.25 0.25 0.25 0.25\n\n[[70]]\n[1] 1\n\n[[71]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[72]]\n[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n\n[[73]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\n[[74]]\n[1] 0.25 0.25 0.25 0.25\n\n[[75]]\n[1] 0.3333333 0.3333333 0.3333333\n\n[[76]]\n[1] 0.2 0.2 0.2 0.2 0.2\n\nattr(,\"mode\")\n[1] \"binary\"\nattr(,\"W\")\n[1] TRUE\nattr(,\"comp\")\nattr(,\"comp\")$d\n [1] 3 4 6 3 5 8 4 4 5 5 3 3 3 6 5 5 9 4 7 3 6 8 2 5 6 5 7 3 8 8 5 3 2 3 4 4 6 3\n[39] 3 4 4 7 3 4 6 7 5 4 2 3 5 2 6 5 6 2 4 3 5 3 4 5 5 6 7 5 4 9 4 1 3 6 5 4 3 5\n```\n\n\n:::\n:::\n\n\n## 5.2 Global Measures of Spatial Autocorrelation: Moran’s I\nThe code performs Global Moran's I tests to measure spatial autocorrelation of drug offense cases for each year. For each year, it filters the data and calculates Moran's I using neighborhood weights and adjacency relations. The Moran's I statistic assesses whether high or low values of drug offense cases are clustered spatially or randomly distributed. The results for each year are stored in a list, providing insight into the spatial patterns of drug offenses over time.\n\nglobal_moran() of the sfdep package is used.\n\n::: {.cell}\n\n```{.r .cell-code}\nmoran_results <- list()\n\nfor (year in names(yearly_nb_data)) {\n  \n  wt <- yearly_listw_data[[year]]\n  \n  nb <- yearly_nb_data[[year]]\n  \n  yearly_data <- drug_offense_summary_all_cases %>%\n    filter(fiscal_year == year, ADM1_EN != \"Phuket\")\n  \n  var <- yearly_data$total_cases\n  \n  moran_test_result <- global_moran(var, nb, wt)\n  \n  moran_results[[year]] <- moran_test_result\n  \n  print(paste(\"Moran's I test result for year\", year))\n  print(moran_test_result)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Moran's I test result for year 2017\"\n$I\n[1] 0.1354189\n\n$K\n[1] 31.86389\n\n[1] \"Moran's I test result for year 2018\"\n$I\n[1] 0.1176243\n\n$K\n[1] 30.48278\n\n[1] \"Moran's I test result for year 2019\"\n$I\n[1] 0.1567233\n\n$K\n[1] 18.84897\n\n[1] \"Moran's I test result for year 2020\"\n$I\n[1] 0.1317174\n\n$K\n[1] 12.50041\n\n[1] \"Moran's I test result for year 2021\"\n$I\n[1] 0.2003025\n\n$K\n[1] 5.552669\n\n[1] \"Moran's I test result for year 2022\"\n$I\n[1] 0.2016508\n\n$K\n[1] 3.308794\n```\n\n\n:::\n:::\n\nPositive Moran's I values indicate a tendency for similar values (in this case, total_cases) to cluster in space, suggesting spatial autocorrelation.\nSignificant p-values (typically less than 0.05) indicate that the observed spatial autocorrelation is statistically significant. All years showed significant results, suggesting consistent clustering of drug offense cases over the years analyzed.\n\nThis indicates that areas with high (or low) levels of drug offenses tend to be spatially clustered, rather than randomly distributed.\n\nThe Moran’s I values increase over the years, particularly in 2021 (0.200) and 2022 (0.201), suggesting that clustering of similar drug offense levels became stronger in the later years.\nThe values of K, representing the total number of cases, decrease over time, possibly indicating fewer drug offenses, but more pronounced spatial clustering as the years progress.\nThe increasing Moran's I values suggest a growing spatial pattern of clustering in drug-related activity.\n\n### 5.2.1 Computing and Visualising Global Moran’s I\nThe Global Moran’s I test, which can be implemented using the global_moran_test() function from the sfdep package, is a method for testing spatial autocorrelation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoran_results <- list()\n\nfor (year in names(yearly_nb_data)) {\n  \n  wt <- yearly_listw_data[[year]]\n  \n  nb <- yearly_nb_data[[year]]\n  \n  yearly_data <- drug_offense_summary_all_cases %>%\n    filter(fiscal_year == year, ADM1_EN != \"Phuket\")\n  \n  var <- yearly_data$total_cases\n  \n  moran_test_result <- global_moran_test(var,\n                  nb,\n                  wt,\n                  alternative = \"greater\")\n  \n  moran_results[[year]] <- moran_test_result\n  \n  print(paste(\"Global Moran's I test result for year\", year))\n  print(moran_test_result)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Global Moran's I test result for year 2017\"\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.5108, p-value = 0.006023\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.135418891      -0.013333333       0.003510047 \n\n[1] \"Global Moran's I test result for year 2018\"\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.1753, p-value = 0.0148\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.117624349      -0.013333333       0.003624168 \n\n[1] \"Global Moran's I test result for year 2019\"\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.5113, p-value = 0.006014\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.156723319      -0.013333333       0.004585464 \n\n[1] \"Global Moran's I test result for year 2020\"\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.0291, p-value = 0.02122\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.131717406      -0.013333333       0.005110044 \n\n[1] \"Global Moran's I test result for year 2021\"\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.8336, p-value = 0.002301\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.200302477      -0.013333333       0.005684132 \n\n[1] \"Global Moran's I test result for year 2022\"\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.8061, p-value = 0.002507\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.201650830      -0.013333333       0.005869543 \n```\n\n\n:::\n:::\n\nGiven that the p-value is much smaller than common significance levels (e.g., 0.05 or 0.01), we reject the null hypothesis of no spatial autocorrelation. This means that there is statistically significant evidence to suggest that the total_cases variable is spatially correlated in the regions analyzed.\n\nThe positive Moran's I statistic indicates that areas with higher counts of total cases are likely to be located near each other, suggesting a clustering effect. This can imply that factors leading to higher cases are spatially concentrated in certain regions.\n\nThe consistency of the Moran’s I statistic, standard deviate, and p-value across all years from 2017 to 2022 indicates that the spatial autocorrelation of total_cases has persisted over time. This could point to ongoing or systematic issues related to drug offenses in specific areas.\n### 5.2.2 Performing Global Moran’s permutation test\nThe Global Moran’s permutation test was conducted for each year between 2017 and 2022 using 999 simulations to assess the significance of spatial autocorrelation in drug offense cases across Thailand. By comparing observed Moran's I values to a reference distribution generated through random permutations, the test provides a more robust measure of spatial clustering. The results, stored in gmoranMC_results, help to validate the significance of the observed spatial patterns and determine if the clustering of high or low drug offense cases is due to random chance or a real spatial process.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngmoranMC_results <- list()\n\nfor (year in names(yearly_nb_data)) {\n  \n  wt <- yearly_listw_data[[year]]\n  \n  nb <- yearly_nb_data[[year]]\n  \n  yearly_data <- drug_offense_summary_all_cases %>%\n    filter(fiscal_year == year, ADM1_EN != \"Phuket\")\n  \n  var <- yearly_data$total_cases\n  \n  gmoranMCresult <- global_moran_perm(var,\n                  nb,\n                  wt,\n                  nsim = 999)\n  \n  gmoranMC_results[[year]] <- gmoranMCresult\n  \n  print(paste(\"Global Moran's I test result for year\", year))\n  print(gmoranMCresult)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Global Moran's I test result for year 2017\"\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.13542, observed rank = 982, p-value = 0.036\nalternative hypothesis: two.sided\n\n[1] \"Global Moran's I test result for year 2018\"\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.11762, observed rank = 953, p-value = 0.094\nalternative hypothesis: two.sided\n\n[1] \"Global Moran's I test result for year 2019\"\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.15672, observed rank = 987, p-value = 0.026\nalternative hypothesis: two.sided\n\n[1] \"Global Moran's I test result for year 2020\"\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.13172, observed rank = 964, p-value = 0.072\nalternative hypothesis: two.sided\n\n[1] \"Global Moran's I test result for year 2021\"\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.2003, observed rank = 998, p-value = 0.004\nalternative hypothesis: two.sided\n\n[1] \"Global Moran's I test result for year 2022\"\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.20165, observed rank = 997, p-value = 0.006\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\nStronger significance is observed in 2019, 2021, and 2022, suggesting clustering of drug offenses. 2018 and 2020 show weaker evidence of spatial clustering.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (year in names(yearly_nb_data)) {\n  gmoranMC <- gmoranMC_results[[year]]\n  hist(gmoranMC$res, main=\"Histogram of Global Moran's I Monte-Carlo Simulation Results\", xlab=\"Monte-Carlo Results\", ylab=\"Frequency\")\n\n  abline(v = gmoranMC$statistic, col = \"red\")\n}\n```\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-26-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-26-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-26-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-26-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-26-6.png){width=672}\n:::\n:::\n\n\n## 5.3 Global Measures of Spatial Autocorrelation: Geary’s C\nIn this section, we would be computing Geary’s C statistics testing by using appropriate functions of spdep package.\n\n### 5.3.1 Geary’s C test\nThe code chunk below performs Geary’s C test for spatial autocorrelation by using the global_c_test() function from the sfdep package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyearly_globalCgeary_results <- list()\n\nfor (year in names(yearly_nb_data)) {\n  \n  wt <- yearly_listw_data[[year]]\n  \n  nb <- yearly_nb_data[[year]]\n  \n  yearly_data <- drug_offense_summary_all_cases %>%\n    filter(fiscal_year == year, ADM1_EN != \"Phuket\")\n  \n  var <- yearly_data$total_cases\n  \n  globalgearyc <- global_c_test(var,\n                  nb,\n                  wt,\n                  alternative = \"greater\")\n  \n  yearly_globalCgeary_results[[year]] <- globalgearyc\n  \n  print(year)\n  print(globalgearyc)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"2017\"\n\n\tGeary C test under randomisation\n\ndata:  x \nweights: listw   \n\nGeary C statistic standard deviate = -0.014472, p-value = 0.5058\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n       1.00202655        1.00000000        0.01960931 \n\n[1] \"2018\"\n\n\tGeary C test under randomisation\n\ndata:  x \nweights: listw   \n\nGeary C statistic standard deviate = -0.047587, p-value = 0.519\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n       1.00655870        1.00000000        0.01899593 \n\n[1] \"2019\"\n\n\tGeary C test under randomisation\n\ndata:  x \nweights: listw   \n\nGeary C statistic standard deviate = 0.55819, p-value = 0.2884\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n       0.93435798        1.00000000        0.01382906 \n\n[1] \"2020\"\n\n\tGeary C test under randomisation\n\ndata:  x \nweights: listw   \n\nGeary C statistic standard deviate = 0.4331, p-value = 0.3325\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.9545560         1.0000000         0.0110095 \n\n[1] \"2021\"\n\n\tGeary C test under randomisation\n\ndata:  x \nweights: listw   \n\nGeary C statistic standard deviate = 1.4864, p-value = 0.06859\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n      0.867690991       1.000000000       0.007923839 \n\n[1] \"2022\"\n\n\tGeary C test under randomisation\n\ndata:  x \nweights: listw   \n\nGeary C statistic standard deviate = 1.7369, p-value = 0.0412\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n      0.855439054       1.000000000       0.006927278 \n```\n\n\n:::\n:::\n\nGeneral Interpretation of Geary's C:\nGeary's C statistic values close to 1 suggest no spatial autocorrelation (randomness in spatial data).\nValues less than 1 indicate positive spatial autocorrelation (neighboring areas have similar values), meaning that nearby regions tend to have similar drug offense totals.\nValues greater than 1 suggest negative spatial autocorrelation (neighboring areas have dissimilar values), meaning that nearby regions tend to have different drug offense totals.\n\nBreakdown of Results:\nThe Geary's C test results for the years 2017 to 2022 provide an assessment of spatial autocorrelation, with a focus on local dissimilarities between neighboring regions:\n\n2017: Geary's C statistic is 1.002 with a p-value of 0.506, suggesting no significant spatial autocorrelation.\n2018: Geary's C statistic is 1.007 with a p-value of 0.519, indicating no significant spatial autocorrelation.\n2019: Geary's C statistic is 0.934 with a p-value of 0.288, showing no significant spatial autocorrelation.\n2020: Geary's C statistic is 0.955 with a p-value of 0.333, indicating no significant spatial autocorrelation.\n2021: Geary's C statistic is 0.868 with a p-value of 0.069, suggesting moderate spatial autocorrelation, significant at the 10% level.\n2022: Geary's C statistic is 0.855 with a p-value of 0.041, indicating significant spatial autocorrelation at the 5% level.\n\nNo strong spatial autocorrelation is found for most years, except for 2021 and 2022, where the data suggests positive spatial autocorrelation (regions with similar drug offense totals are likely to be near each other).\nThe spatial pattern is particularly significant in 2022, where the p-value indicates that neighboring regions are likely to have similar drug offense totals, showing statistically significant spatial clustering.\n2021 also shows potential clustering, with a p-value close to 0.05, suggesting a trend towards spatial autocorrelation.\n\n### 5.3.2 Computing Monte Carlo Geary’s C\nMonte Carlo simulations for Geary's C statistic were performed for each year from 2017 to 2022, using 999 simulations. This approach provides a robust measure of local spatial autocorrelation by comparing observed dissimilarities between neighboring regions to a random distribution. \n\nglobal_c_perm() of sfdep is used.\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\nyearly_geary_mc_results <- list()\n\nfor (year in names(yearly_listw_data)) {\n  \n  wt <- yearly_listw_data[[year]]\n  \n  nb <- yearly_nb_data[[year]]\n  \n  yearly_data <- drug_offense_summary_all_cases %>%\n    filter(fiscal_year == year, ADM1_EN != \"Phuket\")\n  \n  var <- yearly_data$total_cases\n  \n  geary_mc_test_result <- global_c_perm(var,\n                  nb,\n                  wt,\n                  nsim = 999)\n  \n  yearly_geary_mc_results[[year]] <- geary_mc_test_result\n  \n  print(paste(\"Geary's C Monte Carlo test result for year\", year))\n  print(geary_mc_test_result)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Geary's C Monte Carlo test result for year 2017\"\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 1.002, observed rank = 545, p-value = 0.545\nalternative hypothesis: greater\n\n[1] \"Geary's C Monte Carlo test result for year 2018\"\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 1.0066, observed rank = 545, p-value = 0.545\nalternative hypothesis: greater\n\n[1] \"Geary's C Monte Carlo test result for year 2019\"\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.93436, observed rank = 308, p-value = 0.308\nalternative hypothesis: greater\n\n[1] \"Geary's C Monte Carlo test result for year 2020\"\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.95456, observed rank = 332, p-value = 0.332\nalternative hypothesis: greater\n\n[1] \"Geary's C Monte Carlo test result for year 2021\"\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.86769, observed rank = 63, p-value = 0.063\nalternative hypothesis: greater\n\n[1] \"Geary's C Monte Carlo test result for year 2022\"\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.85544, observed rank = 50, p-value = 0.05\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\nFor years 2017, 2018, 2019, 2020: High p-values (>0.05) indicate no significant evidence to reject the null hypothesis, suggesting no significant spatial clustering of total cases.\n\nFor year 2021: The p-value of 0.063 is still approaching significance, indicating some evidence of spatial clustering but not strong enough to conclude definitively.\n\nFor year 2022: The p-value of 0.05 is right at the significance threshold, suggesting a potential trend toward spatial clustering of total cases.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Loop through each year in the yearly_geary_mc_results list\nfor (year in names(yearly_geary_mc_results)) {\n  bperm <- yearly_geary_mc_results[[year]]\n  \n  mean_value <- mean(bperm$res[1:999])\n  var_value <- var(bperm$res[1:999])\n  \n  summary_stats <- summary(bperm$res[1:999])\n  print(paste(\"Summary statistics for year\", year))\n  print(summary_stats)\n  \n  hist(bperm$res, \n       freq=TRUE, \n       breaks=20, \n       xlab=\"Simulated Geary's C\", \n       main=paste(\"Geary's C Monte Carlo Simulation -\", year))\n  \n  # Add a vertical line at 1\n  abline(v=1, col=\"red\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Summary statistics for year 2017\"\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.5438  0.9079  0.9860  0.9961  1.0773  1.5022 \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Summary statistics for year 2018\"\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.6348  0.9039  0.9898  1.0003  1.0801  1.4806 \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-29-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Summary statistics for year 2019\"\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.6394  0.9222  0.9893  0.9976  1.0691  1.3836 \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-29-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Summary statistics for year 2020\"\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.6526  0.9293  0.9993  0.9979  1.0656  1.3817 \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-29-4.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Summary statistics for year 2021\"\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7092  0.9422  1.0018  1.0020  1.0646  1.3447 \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-29-5.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Summary statistics for year 2022\"\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7246  0.9482  1.0004  1.0009  1.0565  1.2596 \n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-29-6.png){width=672}\n:::\n:::\n\n\n# 6.0 Local Measures of Spatial Autocorrelation\n\n## 6.1 Computing and Mapping local Moran’s I\nlocal_moran() function of sfdep package will be used for computing local Moran’s I.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlocalMI_results <- list()\n\nset.seed(1234)\n\nfor (year in names(yearly_nb_data)) {\n  \n  wt <- yearly_listw_data[[year]]\n  \n  nb <- yearly_nb_data[[year]]\n  \n  yearly_data <- drug_offense_summary_all_cases %>%\n    filter(fiscal_year == year, ADM1_EN != \"Phuket\")\n  \n  var <- yearly_data$total_cases\n  \n  lisa <- yearly_data %>% \n    mutate(local_moran = local_moran(\n      var, nb, wt, nsim = 99),\n           .before = 1) %>%\n    unnest(local_moran)\n  print(lisa)\n\n  map <- tm_shape(lisa) +\n    tm_fill(col = \"ii\", \n            style = \"pretty\", \n            palette = \"RdBu\", \n            title = paste(\"Local Moran's I (Year:\", year, \")\")) +\n    tm_borders(alpha = 0.5)\n  print(map)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 76 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 325178.8 ymin: 620860.6 xmax: 1213656 ymax: 2263241\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 76 × 16\n         ii      eii   var_ii   z_ii    p_ii p_ii_sim p_folded_sim skewness\n      <dbl>    <dbl>    <dbl>  <dbl>   <dbl>    <dbl>        <dbl>    <dbl>\n 1 -0.0281   0.00700 0.0251   -0.221 0.825       0.46         0.23    -3.01\n 2  0.196    0.0530  0.0879    0.483 0.629       0.72         0.36    -2.12\n 3  0.980   -0.447   3.38      0.776 0.438       0.38         0.19     1.39\n 4  0.111    0.0261  0.0253    0.535 0.592       0.68         0.34    -2.53\n 5  0.00169 -0.0178  0.0153    0.158 0.875       0.84         0.42    -1.58\n 6  0.307   -0.00738 0.00942   3.24  0.00121     0.06         0.03     1.77\n 7  0.355    0.0162  0.110     1.02  0.308       0.08         0.04    -2.51\n 8 -0.00777  0.00753 0.000790 -0.545 0.586       0.52         0.26    -2.14\n 9 -0.123    0.00131 0.0259   -0.774 0.439       0.3          0.15    -1.54\n10 -0.389    0.219   0.541    -0.827 0.408       0.36         0.18     1.39\n# ℹ 66 more rows\n# ℹ 8 more variables: kurtosis <dbl>, mean <fct>, median <fct>, pysal <fct>,\n#   ADM1_EN <chr>, fiscal_year <dbl>, total_cases <dbl>,\n#   geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 76 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 325178.8 ymin: 620860.6 xmax: 1213656 ymax: 2263241\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 76 × 16\n         ii       eii    var_ii   z_ii      p_ii p_ii_sim p_folded_sim skewness\n      <dbl>     <dbl>     <dbl>  <dbl>     <dbl>    <dbl>        <dbl>    <dbl>\n 1 -0.0582   0.0227   0.0343    -0.437 0.662         0.5          0.25   -2.47 \n 2  0.150    0.0262   0.115      0.365 0.715         0.88         0.44   -2.23 \n 3  1.05    -0.659    2.65       1.05  0.294         0.34         0.17    0.737\n 4  0.237   -0.0222   0.0992     0.822 0.411         0.24         0.12   -2.32 \n 5 -0.00162 -0.000383 0.0000263 -0.242 0.809         0.48         0.24   -1.85 \n 6 -0.0207   0.00106  0.0000306 -3.93  0.0000851     0.04         0.02   -1.75 \n 7  0.395    0.0442   0.106      1.08  0.282         0.1          0.05   -2.34 \n 8  0.104   -0.00263  0.0162     0.833 0.405         0.36         0.18    1.78 \n 9 -0.0941   0.0318   0.0179    -0.940 0.347         0.26         0.13   -1.78 \n10 -0.375   -0.0999   0.160     -0.689 0.491         0.46         0.23    1.94 \n# ℹ 66 more rows\n# ℹ 8 more variables: kurtosis <dbl>, mean <fct>, median <fct>, pysal <fct>,\n#   ADM1_EN <chr>, fiscal_year <dbl>, total_cases <dbl>,\n#   geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-30-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 76 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 325178.8 ymin: 620860.6 xmax: 1213656 ymax: 2263241\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 76 × 16\n        ii       eii   var_ii   z_ii    p_ii p_ii_sim p_folded_sim skewness\n     <dbl>     <dbl>    <dbl>  <dbl>   <dbl>    <dbl>        <dbl>    <dbl>\n 1 -0.0953  0.000190 0.0245   -0.610 0.542       0.38         0.19   -1.64 \n 2  0.183   0.0482   0.133     0.371 0.711       0.94         0.47   -1.55 \n 3  1.63   -0.841    1.93      1.78  0.0752      0.14         0.07    0.729\n 4  0.297  -0.0566   0.153     0.902 0.367       0.18         0.09   -1.80 \n 5  0.0957 -0.00163  0.0174    0.737 0.461       0.3          0.15    1.46 \n 6 -0.0658 -0.000402 0.000506 -2.91  0.00365     0.06         0.03   -1.18 \n 7  0.436  -0.0205   0.114     1.35  0.176       0.06         0.03   -1.42 \n 8  0.282  -0.0396   0.0755    1.17  0.241       0.2          0.1     1.54 \n 9 -0.0958 -0.0307   0.0533   -0.282 0.778       0.58         0.29   -1.91 \n10 -0.468   0.0563   0.389    -0.841 0.400       0.32         0.16    1.09 \n# ℹ 66 more rows\n# ℹ 8 more variables: kurtosis <dbl>, mean <fct>, median <fct>, pysal <fct>,\n#   ADM1_EN <chr>, fiscal_year <dbl>, total_cases <dbl>,\n#   geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-30-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 76 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 325178.8 ymin: 620860.6 xmax: 1213656 ymax: 2263241\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 76 × 16\n         ii       eii   var_ii   z_ii   p_ii p_ii_sim p_folded_sim skewness\n      <dbl>     <dbl>    <dbl>  <dbl>  <dbl>    <dbl>        <dbl>    <dbl>\n 1 -0.117   -0.00352  0.114    -0.337 0.736      0.56         0.28   -0.885\n 2  0.283   -0.0237   0.241     0.625 0.532      0.58         0.29   -1.58 \n 3 -0.00844 -0.322    3.21      0.175 0.861      0.74         0.37    0.932\n 4  0.129   -0.0178   0.0468    0.677 0.499      0.56         0.28   -1.67 \n 5 -0.00813  0.00663  0.00815  -0.164 0.870      0.72         0.36   -1.04 \n 6  0.0835  -0.000885 0.00116   2.47  0.0134     0.04         0.02    0.699\n 7  0.516    0.00160  0.119     1.49  0.137      0.04         0.02   -0.899\n 8 -0.00701 -0.00109  0.000169 -0.456 0.649      0.58         0.29   -1.06 \n 9 -0.158    0.0145   0.0220   -1.16  0.244      0.3          0.15   -1.15 \n10 -0.477   -0.0662   0.895    -0.434 0.664      0.88         0.44    1.17 \n# ℹ 66 more rows\n# ℹ 8 more variables: kurtosis <dbl>, mean <fct>, median <fct>, pysal <fct>,\n#   ADM1_EN <chr>, fiscal_year <dbl>, total_cases <dbl>,\n#   geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-30-4.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 76 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 325178.8 ymin: 620860.6 xmax: 1213656 ymax: 2263241\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 76 × 16\n        ii      eii  var_ii   z_ii  p_ii p_ii_sim p_folded_sim skewness kurtosis\n     <dbl>    <dbl>   <dbl>  <dbl> <dbl>    <dbl>        <dbl>    <dbl>    <dbl>\n 1 -0.177   0.00620 0.0156  -1.46  0.143     0.22         0.11   -0.917   0.841 \n 2  0.519   0.0510  0.207    1.03  0.304     0.36         0.18   -0.816   0.245 \n 3 -0.914  -0.171   1.37    -0.635 0.525     0.64         0.32    0.561  -0.0535\n 4  0.0170 -0.00982 0.0209   0.186 0.852     0.98         0.49   -0.950   0.775 \n 5  0.285  -0.0480  0.0619   1.34  0.180     0.18         0.09    0.624   0.147 \n 6  0.0522 -0.0129  0.00302  1.19  0.236     0.26         0.13    0.616   0.0586\n 7  0.810   0.0663  0.245    1.50  0.133     0.12         0.06   -0.491  -0.337 \n 8  0.354   0.00421 0.0589   1.44  0.150     0.24         0.12    0.683  -0.0479\n 9 -0.0558 -0.0118  0.0627  -0.176 0.860     0.74         0.37   -0.871   0.0420\n10 -0.507  -0.0242  0.969   -0.490 0.624     0.8          0.4     0.411  -0.698 \n# ℹ 66 more rows\n# ℹ 7 more variables: mean <fct>, median <fct>, pysal <fct>, ADM1_EN <chr>,\n#   fiscal_year <dbl>, total_cases <dbl>, geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-30-5.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 76 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 325178.8 ymin: 620860.6 xmax: 1213656 ymax: 2263241\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 76 × 16\n         ii       eii var_ii    z_ii  p_ii p_ii_sim p_folded_sim skewness\n      <dbl>     <dbl>  <dbl>   <dbl> <dbl>    <dbl>        <dbl>    <dbl>\n 1 -0.135    0.000885 0.0548 -0.582  0.560     0.56         0.28  -0.127 \n 2  0.435    0.0297   0.155   1.03   0.303     0.32         0.16  -0.437 \n 3 -0.547   -0.0640   0.494  -0.688  0.492     0.54         0.27   0.446 \n 4  0.115    0.00845  0.0170  0.816  0.414     0.46         0.23   0.477 \n 5  0.350    0.0151   0.0691  1.27   0.203     0.22         0.11  -0.0674\n 6  0.00966  0.00258  0.0124  0.0637 0.949     0.96         0.48  -0.288 \n 7  0.812    0.0952   0.217   1.54   0.124     0.12         0.06  -0.0985\n 8  0.503    0.0139   0.147   1.27   0.203     0.32         0.16   0.435 \n 9  0.156    0.00394  0.0773  0.548  0.584     0.64         0.32  -0.0731\n10 -0.231   -0.200    0.862  -0.0339 0.973     0.98         0.49   0.353 \n# ℹ 66 more rows\n# ℹ 8 more variables: kurtosis <dbl>, mean <fct>, median <fct>, pysal <fct>,\n#   ADM1_EN <chr>, fiscal_year <dbl>, total_cases <dbl>,\n#   geometry <MULTIPOLYGON [m]>\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-30-6.png){width=672}\n:::\n:::\n\nThe maps reveal consistent spatial autocorrelation patterns over the three years, particularly highlighting Bangkok and southern Thailand as areas of strong positive clustering. Over time, the extent of provinces with strong spatial clustering appears to have slightly increased in 2019. The central and northern regions consistently show weaker spatial autocorrelation, with certain provinces exhibiting negative spatial autocorrelation values, reflecting spatial dissimilarity.\n\nThese maps suggest that there are persistent spatial patterns in drug offenses over time, with certain regions consistently exhibiting higher clustering.\n\nOver the years from 2020 to 2022, there is a noticeable shift in drug offense spatial patterns:\n2020: Spatial clustering was primarily concentrated in the south, around Bangkok.\n2021: The focus shifts towards the northeast, indicating new regional clusters.\n2022: The northeast becomes a significant area of high drug offenses, further reinforcing a shift in the spatial distribution pattern of offenses.\n\n### 6.1.1 Mapping the local Moran’s I p-values\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nfor (year in names(yearly_listw_data)) {\n  wt <- yearly_listw_data[[year]]\n  \n  nb <- yearly_nb_data[[year]]\n  \n  yearly_data <- drug_offense_summary_all_cases %>%\n    filter(fiscal_year == year, ADM1_EN != \"Phuket\")\n  \n  var <- yearly_data$total_cases\n  \n  lisa <- yearly_data %>% \n    mutate(local_moran = local_moran(\n      var, nb, wt, nsim = 99),\n           .before = 1) %>%\n    unnest(local_moran)\n  \n# Map for p-values of Local Moran's I\nmap_p_value <- tm_shape(lisa) +\n  tm_fill(col = \"p_ii\", \n          style = \"pretty\",\n          palette = \"YlGnBu\",\n          title = paste(\"Local Moran's I p-values (Year:\", year, \")\")) +\n  tm_borders(alpha = 0.5)\n\nprint(map_p_value)\n}\n```\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-31-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-31-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-31-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-31-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-31-6.png){width=672}\n:::\n:::\n\n\n## 6.2 Creating a LISA Cluster Map\nThe LISA Cluster Map shows the significant locations color coded by type of spatial autocorrelation. The first step before we can generate the LISA cluster map is to plot the Moran scatterplot.\n\n### 6.2.3 Preparing LISA map classes and Plotting LISA map\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (year in names(yearly_nb_data)) {\n  wt <- yearly_listw_data[[year]]\n  nb <- yearly_nb_data[[year]]\n  \n  yearly_data <- drug_offense_summary_all_cases %>%\n    filter(fiscal_year == year, ADM1_EN != \"Phuket\")\n  \n  # Calculate Local Moran's I\n  var <- yearly_data$total_cases\n  lisa <- yearly_data %>% \n    mutate(local_moran = local_moran(var, nb, wt, nsim = 99),\n           .before = 1) %>%\n    unnest(local_moran)\n  \n  lisa_sig <- lisa %>% filter(p_ii < 0.05)\n  \n  m1 <- tm_shape(lisa) +\n    tm_polygons() +\n    tm_borders(alpha = 0.5) +\n    tm_shape(lisa_sig) +\n    tm_fill(\"p_ii\", palette = \"PuOr\", midpoint = 0) + \n    tm_borders(alpha = 0.4) +\n    tm_layout(main.title = paste(\"Local Moran's I - Significant (Year:\", year, \")\"))\n  \n  m2 <- tm_shape(lisa) +\n    tm_polygons(\"total_cases\",  \n                palette = \"Blues\",\n                style = \"quantile\", n = 10) +\n    tm_layout(main.title = paste(\"Total Cases (Year:\", year, \")\"))\n\n  print(tmap_arrange(m1, m2, asp = 1, ncol = 2))\n}\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-32-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-32-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-32-4.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-32-5.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-32-6.png){width=672}\n:::\n:::\n\n\n# 7.0 Hot Spot and Cold Spot Area Analysis\n## 7.1 Getis and Ord’s G-Statistics\nGetis and Ord’s G-Statistics looks at neighbours within a defined proximity to identify where either high or low values clutser spatially. Here, statistically significant hot-spots are recognised as areas of high values where other areas within a neighbourhood range also share high values too.\n\nPositive Gi* values (purple shades) indicate high clustering (hot spots) of drug offenses in certain provinces.\n\nNegative Gi* values (orange shades) suggest cold spots, i.e., areas with significantly low counts of offenses.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhcsa_list <- list()\nfor (year in names(yearly_nb_data)) {\n  \n  wt <- yearly_listw_data[[year]]\n  nb <- yearly_nb_data[[year]]\n  yearly_data <- drug_offense_summary_all_cases %>%\n    filter(fiscal_year == year, ADM1_EN != \"Phuket\")\n  var <- yearly_data$total_cases\n  \n  hcsa <- yearly_data %>% \n    cbind(local_gstar_perm(var, nb, wt, nsim = 99)) %>%\n    mutate(\"p_sim\" = replace(`p_sim`, `p_sim` > 0.1, NA),\n           \"gi_star\" = ifelse(is.na(`p_sim`), NA, `gi_star`))\n  \n  hcsa_list[[year]] <- hcsa\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (year in names(yearly_nb_data)) {\n  hcsa <- hcsa_list[[year]]\n  map <- tm_shape(hcsa) +\n  tm_fill(\"gi_star\", palette=\"PuOr\", midpoint=0, title=\"Gi*\") + \n  tm_borders(alpha = 0.5)\n  print(map)\n}\n```\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-34-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-34-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-34-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-34-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-34-6.png){width=672}\n:::\n:::\n\n\nThe consistent hot spot in Bangkok (and surrounding regions) and shifting cold spots in northern Thailand indicate a stable pattern of high drug-related activity in urban areas.\nSome variability in low-activity zones, potentially influenced by evolving local conditions.\n\n## 7.2 Cluster Persistance\nBy dentifying the number of times a province was classified as a hot or cold spot, we can try to visualize the results through a heatmap of persistence. \n\n::: {.cell}\n\n```{.r .cell-code}\nhcsa_list_no_geom <- lapply(hcsa_list, function(x) st_set_geometry(x, NULL))\n\npersistence_df <- hcsa_list_no_geom %>%\n  purrr::reduce(full_join, by = \"ADM1_EN\", suffix = c(\"\", \"_next\")) %>%\n  rowwise() %>%\n  mutate(\n    hot_count = sum(c_across(contains(\"gi_star\")) > 0, na.rm = TRUE),\n    cold_count = sum(c_across(contains(\"gi_star\")) < 0, na.rm = TRUE),\n    neutral_count = sum(is.na(c_across(contains(\"gi_star\"))))\n  ) %>%\n  ungroup()\n\nprint(persistence_df[, c(\"ADM1_EN\", \"hot_count\", \"cold_count\", \"neutral_count\")])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 76 × 4\n   ADM1_EN       hot_count cold_count neutral_count\n   <chr>             <int>      <int>         <int>\n 1 Amnat Charoen         0          0             6\n 2 Ang Thong             0          0             6\n 3 Bangkok               0          0             6\n 4 Bueng Kan             0          0             6\n 5 Buri Ram              0          0             6\n 6 Chachoengsao          4          0             2\n 7 Chai Nat              0          5             1\n 8 Chaiyaphum            0          0             6\n 9 Chanthaburi           0          0             6\n10 Chiang Mai            0          0             6\n# ℹ 66 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbase_sf <- hcsa_list[[1]] \n\n# Perform a spatial join with the persistence data\npersistence_sf <- base_sf %>%\n  left_join(persistence_df, by = \"ADM1_EN\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhot_persistence_map <- tm_shape(persistence_sf) +\n  tm_polygons(\n    \"hot_count\", palette = \"Purples\", title = \"Hot Spot Persistence\",\n    style = \"cont\", border.alpha = 0.5\n  ) +\n  tm_layout(main.title = \"Hot Spot Persistence Across Years\")\n\nprint(hot_persistence_map)\n```\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Cold Spot Persistence Map\ncold_persistence_map <- tm_shape(persistence_sf) +\n  tm_polygons(\n    \"cold_count\", palette = \"Oranges\", title = \"Cold Spot Persistence\",\n    style = \"cont\", border.alpha = 0.5\n  ) +\n  tm_layout(main.title = \"Cold Spot Persistence Across Years\")\n\nprint(cold_persistence_map)\n```\n\n::: {.cell-output-display}\n![](Take--Home_Ex02_files/figure-html/unnamed-chunk-37-2.png){width=672}\n:::\n:::\n\nBangkok and nearby provinces seem to be consistent hot spots over the years and other areas show some sporadic clustering, but with lower persistence.\n\nPersistent cold spots are clustered aorund northern Thailand.\n",
    "supporting": [
      "Take--Home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}