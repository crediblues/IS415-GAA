{
  "hash": "72e7cbaadac85fd0ea61baa0c2f9b397",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-Class Exercise 3\"\nsubtitle: \"Spatial Analysis and Point Methods\"\nauthor: \"Ooi Wen Xian\"\ndate: \"September 2, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true\n  cache: true\n---\n\nEdit 8/9: Fixed navigation issues\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(arrow,lubridate,tidyverse,tmap,sf)\n```\n:::\n\n# 1.0 Installing Maptools\n\nmaptools is retired and binary is removed from CRAN. We can download it from Posit Public Package Manager\n\n```\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n```\n# 2.0 Importing Geospatial Data\n\nIn this section, st_read() of sf package will be used to import the three geospatial data sets mentioned in previous section into R environment.\n\n::: {.cell}\n\n```{.r .cell-code}\nchildcare_sf <- st_read(\"data/child-care-services-geojson.geojson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `child-care-services-geojson' from data source \n  `C:\\wamp64\\www\\crediblues\\IS415-GAA\\In-Class_Ex\\In-Class_Ex03\\data\\child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_sf <- st_read(dsn = \"data\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\wamp64\\www\\crediblues\\IS415-GAA\\In-Class_Ex\\In-Class_Ex03\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n# 3.0 Creating Coastal Outline\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsg_sf <- mpsz_sf %>%\n  st_union()\n\nplot(sg_sf)\n```\n\n::: {.cell-output-display}\n![](In-Class_Ex03_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n# 4.0 Importing acled data\n\nMyammar has 2 different coordinate reference systems, hence we would be using one of them for this example.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nacled_sf <- read_csv(\"data/ACLED_Myanmar.csv\") %>%\n  st_as_sf(coords=c(\"longitude\", \"latitude\"),\n           crs=4326) %>%\n  st_transform(crs=32647) %>%\n  mutate(event_date = dmy(event_date))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 55574 Columns: 31\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (20): event_id_cnty, event_date, disorder_type, event_type, sub_event_ty...\ndbl (11): year, time_precision, inter1, inter2, interaction, iso, latitude, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')  \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\n# Used plot mode for faster rendering, as file took too long to render with interactive map\nacled_sf %>% \n  filter(year == 2023 | event_type == 'Political violence') %>% \n  tm_shape() + tm_dots()\n```\n\n::: {.cell-output-display}\n![](In-Class_Ex03_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\ntmap_mode('plot')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}