---
title: "In-Class Exercise 9"
author: "Ooi Wen Xian"
date: "October 21, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  freeze: true
---

# Loading R packages

```{r}
pacman::p_load(spdep, tmap, sf, ClustGeo,                 ggpubr, cluster, factoextra, NbClust,                heatmaply, corrplot, psych, tidyverse, GGally)
```

# Data Set-up

```{r}
ict <- read_rds("data/rds/shan_ict.rds")
ict
```

```{r}
shan_sf <- read_rds("data/rds/shan_sf.rds")
shan_sf
```

# Conventional Hierarchical Clustering

## Hierarchical clustering 

hclust_ward is a hierarchical clustering object class

```{r}
proxmat <- dist(ict, method = "euclidian")
hclust_ward <- hclust(proxmat, method = 'ward.D')
groups <- as.factor(cutree(hclust_ward, k=6))
```

```{r}
str(groups)
```

## Append to geospatial data

pacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)

```{r}
shan_sf_cluster <- cbind(shan_sf, as.matrix(groups)) %>% rename('CLUSTER' = as.matrix.groups.) %>%
    select(-c(3:4, 7:9)) %>%
    rename(TS = TS.x)
```

## The Dendrogram

```{r}
plot(hclust_ward, cex=0.6)
rect.hclust(hclust_ward, k=6, border = 2:5)
```

## Cluster map

```{r}
qtm(shan_sf_cluster, 'CLUSTER')
```

# Spatially 

```{r}
dist <- st_distance(shan_sf, shan_sf)
distmat <- as.dist(dist)
```

```{r}
shan.nb <-poly2nb(shan_sf)
```

```{r}
plot(st_geometry(shan_sf),
     border=grey(.5))
pts <- st_coordinates(st_centroid(shan_sf))
plot(shan.nb, pts, col='blue', add=TRUE)
```

```{r}
lcosts <- nbcosts(shan.nb, ict)
```

```{r}
shan.w <- nb2listw(shan.nb, lcosts, style = "B")
```

```{r}
shan.mst <- mstree(shan.w)
```

```{r}
plot(st_geometry(shan_sf), border=gray(.5))
plot.mst(shan.mst, pts, col='blue',cex.lab = 0.7, cex.circles = 0.005, add=TRUE)
```

# Computing spatially constrained clusters using SKATER

```{r}
skater.cluster <- skater(edges = shan.mst[,1:2],
                         data = ict,
                         method = 'euclidean',
                         ncuts = 5)
```

```{r}
plot(st_geometry(shan_sf), border = gray(0.5))
plot(skater.cluster, pts, 
     cex.lab = 0.7, 
     groups.colors = c("red", "green", "blue", "brown", "pink"), 
     cex.circles = 0.01,  # Increase circle size if needed
     add = TRUE)
```

```{r}
groups_mat <- as.matrix(skater.cluster$groups)
shan_sf_spatialcluster <- cbind(shan_sf_cluster, as.factor(groups_mat)) %>% rename(`skater_CLUSTER` = `as.factor.groups_mat.`)
qtm(shan_sf_spatialcluster, "skater_CLUSTER")
```

```{r}
cr <- choicealpha(proxmat, distmat, range.alpha = seq(0, 1, 0.1), K=6, graph = TRUE)

```

```{r}
clustG <- hclustgeo(proxmat, distmat, alpha = 0.2)

groups <- as.factor(cutree(clustG, k=6))
shan_sf_clustGEO <- cbind(shan_sf, as.matrix(groups)) %>%
  rename(`CLUSTER` = `as.matrix.groups.`)

qtm(shan_sf_clustGEO, "CLUSTER")

```

```{r}
ggparcoord(data = shan_sf_clustGEO, 
           columns = c(17:21), 
           scale = "globalminmax",
           alphaLines = 0.2,
           boxplot = TRUE, 
           title = "Multiple Parallel Coordinates Plots of ICT Variables by Cluster") +
  facet_grid(~ CLUSTER) + 
  theme(axis.text.x = element_text(angle = 30))

```
